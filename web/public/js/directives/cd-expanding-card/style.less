// The z-indexes in here are to do with some weird compositing issues with transforms

@cd-expanding-card-anim-speed: 0.2s;
@cd-expanding-card-spacing-base: 16px;

.cd-expanding-card {
  background: @cd-white;
  box-shadow: @cd-box-shadow;
  margin: @cd-expanding-card-spacing-base;
  overflow: hidden;
  position: relative;
  transition: transform @cd-expanding-card-anim-speed ease-out, box-shadow @cd-expanding-card-anim-speed ease-out;
  outline: none;

  @media (max-width: @screen-xs-max) {
    margin: @cd-expanding-card-spacing-base 0;
  }

  &__expand-button {
    cursor: pointer;
    position: absolute;
    bottom: 0;
    right: 8px;
    transition: transform @cd-expanding-card-anim-speed ease-in-out;
    color: @cd-purple;
  }

  &__info {
    position: relative;
    display: flex;
    margin: (@cd-expanding-card-spacing-base * 2) 0;
    transition: margin @cd-expanding-card-anim-speed ease-in-out;
    z-index: 2;

    @media (max-width: @screen-xs-max) {
      flex-direction: column;
    }
  }

  &__header {
    flex: 1;
    transition: transform @cd-expanding-card-anim-speed ease-in-out;

    &-main {
      min-height: (@cd-expanding-card-spacing-base * 4);
      transition: color @cd-expanding-card-anim-speed ease-in-out;
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      position: relative;
      padding: (@cd-expanding-card-spacing-base / 2) 0;

      > h2 {
        z-index: 2;
      }

      &::before {
        content: '';
        display: block;
        position: absolute;
        bottom: 0;
        left: -(@cd-expanding-card-spacing-base * (8 + 2 + 2)); // To stretch to size of image plus margin left and right
        right: 0;
        height: calc(~'100% +' (@cd-expanding-card-spacing-base * (2))); // Height of the h2, plus margin top
        transform: translateY(calc(~'-100% +' (@cd-expanding-card-spacing-base * 0.5))); // Height of the h2 minus the thickness of the purple bar (inverted)
        background: @cd-purple;
        transition: transform @cd-expanding-card-anim-speed ease-in-out;
        z-index: 1;

        @media (max-width: @screen-xs-max) {
          left: 0;
          height: calc(~'100% +' (@cd-expanding-card-spacing-base * (2))); // Height of h2, plus margin-top
        }
      }

      @media (max-width: @screen-xs-max) {
        height: auto;
      }
    }

    &-sub {
      padding: (@cd-expanding-card-spacing-base / 2) 0;
    }

    &:first-child {
      margin-left: (@cd-expanding-card-spacing-base * 2);

      @media (max-width: @screen-xs-max) {
        margin-left: 0;
      }
    }

    @media (max-width: @screen-xs-max) {
      text-align: center;
    }
  }

  &__round-image {
    border-radius: 100%;
    margin: 0 (@cd-expanding-card-spacing-base * 2);
    overflow: hidden;
    width: (@cd-expanding-card-spacing-base * 8);
    height: (@cd-expanding-card-spacing-base * 8);
    transition: transform @cd-expanding-card-anim-speed ease-in-out;
    transform-origin: left center;
    z-index: 2;

    @media (max-width: @screen-xs-max) {
      margin: 0 auto;
    }

    > img {
      width: 100%;
    }
  }

  // LESS is annoying and wouldn't let me do this as a nested rule of the existing &__round-image
  &__round-image ~ &__header {
    .cd-expanding-card {
      &__header {
        &-main {
          &::before {
            @media (max-width: @screen-xs-max) {
              height: calc(~'100% +' (@cd-expanding-card-spacing-base * (8 + 2))); // Height of h2, plus image height and margin-top
            }
          }
        }
      }
    }
  }

  &__sub-title-1 {
    display: inline-block;
    margin-right: (@cd-expanding-card-spacing-base * 2);

    @media (max-width: @screen-xs-max) {
      margin: 0 (@cd-expanding-card-spacing-base * 2);
    }
  }

  &__sub-title-2 {
    color: #666;
  }

  &__card-content {
    height: 0;
    overflow: hidden;
    opacity: 0;
    transition: height @cd-expanding-card-anim-speed ease-in-out;
    &-size-wrapper {
      padding: 16px;
    }
  }

  &[data-expanded=collapsed], &[data-expanded=expanding] {
    .cd-expanding-card {
      &__card-content {
        transition: opacity @cd-expanding-card-anim-speed @cd-expanding-card-anim-speed ease-in-out, height @cd-expanding-card-anim-speed ease-in-out;
      }

    }
  }

  &[data-expanded=expanding], &[data-expanded=expanded] {
    box-shadow: 0px 10px 15px rgba(0,0,0,0.2);
    transform: translateY(-(@cd-expanding-card-spacing-base / 4));

    .cd-expanding-card {
      &__info {
        margin: (@cd-expanding-card-spacing-base * 2) 0 0 0;
      }

      &__expand-button {
        transform: rotate(180deg);
      }

      &__header-main {
        color: @cd-white;

        &::before {
          transform: translateY(0);
        }
      }

      &__card-content {
        opacity: 1;
      }
    }
  }

  &[data-expanded=collapsing], &[data-expanded=collapsed] {
    cursor: pointer;

    &:hover {
      box-shadow: 0px 10px 15px rgba(0,0,0,0.2);
      transform: translateY(-(@cd-expanding-card-spacing-base / 4));
    }
  }

  &[data-expanded=expanded], &[data-expanded=collapsing] {
    cursor: default;

    .cd-expanding-card {
      &__expand-button {
        transform: rotate(180deg);
      }

      &__card-content {
        transition: opacity @cd-expanding-card-anim-speed ease-in-out, height @cd-expanding-card-anim-speed @cd-expanding-card-anim-speed ease-in-out;
      }
    }
  }

  &[data-expanded=expanded] {
    .cd-expanding-card {
      &__card-content {
        overflow: visible;
      }
    }
  }
}
